// controllers/LineMessage3DController.js
const { relayFromBot1ToBot2, relayFromBot2ToBot1 } = require('./relayController');
const { client } = require('../utils/lineClient');
const log = require('../utils/logger').createModuleLogger('Line3D');

const handleLine3DMessage = async (event) => {
  const userId = event.source.userId;
  const msg = event.message;
  const isFromAdmin = await checkIfAdmin(userId); // üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡πà‡∏≤‡∏°‡∏≤‡∏à‡∏≤‡∏Å Bot2 (‡∏û‡∏µ‡πà‡πÄ‡∏Å‡πà‡∏á) ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà

  log.info(`üì• Message3D | userId: ${userId} | type: ${msg.type}`);

  switch (msg.type) {
    case 'text':
      if (isFromAdmin) {
        await relayFromBot2ToBot1(userId, msg.text);
      } else {
        await relayFromBot1ToBot2(userId, msg.text);
      }
      break;

    case 'sticker':
      const stickerMsg = {
        type: 'sticker',
        packageId: msg.packageId,
        stickerId: msg.stickerId
      };
      if (isFromAdmin) {
        await relayFromBot2ToBot1(userId, stickerMsg);
      } else {
        await relayFromBot1ToBot2(userId, stickerMsg);
      }
      break;

    case 'image':
    case 'video':
    case 'audio':
    case 'file':
      const mediaNotice = `üìé [${msg.type.toUpperCase()}] ‡∏à‡∏≤‡∏Å ${isFromAdmin ? '‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô' : '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤'} ‚Üí messageId: ${msg.id}`;
      if (isFromAdmin) {
        await relayFromBot2ToBot1(userId, mediaNotice);
      } else {
        await relayFromBot1ToBot2(userId, mediaNotice);
      }
      break;

    default:
      log.warn(`‚ùå ‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó: ${msg.type}`);
      await client.replyMessage(event.replyToken, {
        type: 'text',
        text: '‚ùå ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö'
      });
  }
};

const checkIfAdmin = async (userId) => {
  // üîê ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ‡∏û‡∏µ‡πà‡πÄ‡∏Å‡πà‡∏á‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏õ‡∏£‡∏±‡∏ö logic ‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡πà‡∏≤ userId ‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∑‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÑ‡∏î‡πâ
  // ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: ‡πÄ‡∏ä‡πá‡∏Ñ‡∏à‡∏≤‡∏Å Supabase ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏Å‡∏±‡∏ö ADMIN_USER_ID ‡πÉ‡∏ô .env ‡∏Å‡πá‡πÑ‡∏î‡πâ
  return process.env.ADMIN_USER_ID === userId;
};

module.exports = {
  handleLine3DMessage
};
