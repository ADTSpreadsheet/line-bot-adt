const { supabase } = require('../utils/supabaseClient');
const { sendLineMessage } = require('../utils/lineBot');

// ‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô OTP
const confirmOtp = async (req, res) => {
  try {
    const { ref_code, otp } = req.body;

    // STEP 1: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö OTP ‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏™‡πà‡∏á‡∏°‡∏≤
    const { data, error } = await supabase
      .from('otp_sessions')
      .select('*')
      .eq('ref_code', ref_code)
      .eq('otp_code', otp)
      .eq('status', 'ACTIVE')
      .maybeSingle();

    if (error || !data) {
      return res.status(404).json({ message: 'OTP ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡πÅ‡∏•‡πâ‡∏ß' });
    }

    // STEP 2: ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï verify_status ‡πÅ‡∏•‡∏∞ updated_at
    const { error: updateVerifyError } = await supabase
      .from('auth_sessions')
      .update({
        verify_status: 'ACTIVE',
        updated_at: new Date().toISOString()
      })
      .eq('ref_code', ref_code);

    if (updateVerifyError) {
      return res.status(500).json({ message: '‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï verify_status ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à' });
    }

    // STEP 3: ‡∏•‡πâ‡∏≤‡∏á otp_code ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å auth_sessions
    const { error: clearOtpError } = await supabase
      .from('auth_sessions')
      .update({ otp_code: null })
      .eq('ref_code', ref_code);

    if (clearOtpError) {
      return res.status(500).json({ message: '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡πâ‡∏≤‡∏á‡∏Ñ‡πà‡∏≤ OTP ‡πÑ‡∏î‡πâ' });
    }

    // STEP 4: ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï status ‡∏ñ‡πâ‡∏≤‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
    const { error: updateStatusError } = await supabase
      .from('auth_sessions')
      .update({ status: 'COMPLETE' })
      .eq('ref_code', ref_code);

    if (updateStatusError) {
      return res.status(500).json({ message: '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï status ‡πÑ‡∏î‡πâ' });
    }

    return res.status(200).json({ message: '‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô OTP ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡∏£‡∏±‡∏ö üéâ' });

  } catch (err) {
    console.error('Error confirming OTP:', err);
    return res.status(500).json({ message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô OTP' });
  }
};

// ‚ùó‚ùó ‡∏≠‡∏¢‡πà‡∏≤‡∏•‡∏∑‡∏° exports ‡∏î‡πâ‡∏ß‡∏¢‡∏ô‡∏∞!
module.exports = {
  confirmOtp
};
