// controllers/replyFromAdminController.js
const line = require('@line/bot-sdk');
const { supabase } = require('../utils/supabaseClient');
const logger = require('../utils/logger').createModuleLogger('ReplyFromAdmin');

const client = new line.Client({
  channelAccessToken: process.env.LINE_CHANNEL_ACCESS_TOKEN,
  channelSecret: process.env.LINE_CHANNEL_SECRET
});

exports.replyToUser = async (req, res) => {
  const { ref_code, message } = req.body;

  if (!ref_code || !message) {
    logger.warn('‚õî Missing ref_code or message');
    return res.status(400).json({ message: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏ ref_code ‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°' });
  }

  try {
    const { data, error } = await supabase
      .from('auth_sessions')
      .select('line_user_id')
      .eq('ref_code', ref_code)
      .maybeSingle();

    if (error || !data?.line_user_id) {
      logger.error(`‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö line_user_id ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Ref: ${ref_code}`);
      return res.status(404).json({ message: '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö Ref.Code ‡∏ô‡∏µ‡πâ' });
    }

    const lineUserId = data.line_user_id;

    await client.pushMessage(lineUserId, {
      type: 'text',
      text: message
    });

    logger.info(`‚úÖ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏ñ‡∏∂‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‚Üí Ref: ${ref_code}`);
    return res.status(200).json({ message: '‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß' });

  } catch (err) {
    logger.error(`üî• ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${err.message}`);
    return res.status(500).json({ message: 'Server Error' });
  }
};
