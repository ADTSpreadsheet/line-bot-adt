const { supabase } = require('../utils/supabaseClient');
const line = require('@line/bot-sdk');

// LINE Client
const config = {
  channelAccessToken: process.env.LINE_CHANNEL_ACCESS_TOKEN,
  channelSecret: process.env.LINE_CHANNEL_SECRET,
};
const client = new line.Client(config);

const setupPassword = async (req, res) => {
  try {
    const { ref_code, license_no, password } = req.body;

    if (!ref_code || !license_no || !password) {
      console.warn(`[SETUP-PASSWORD] ‚ö†Ô∏è ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö`);
      return res.status(400).json({ message: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô' });
    }

    // üîç ‡∏î‡∏∂‡∏á line_user_id ‡∏à‡∏≤‡∏Å license_holders
    const { data: sessionData, error: sessionError } = await supabase
      .from('license_holders')
      .select('line_user_id')
      .eq('ref_code', ref_code)
      .maybeSingle();

    if (sessionError) {
      console.error(`[SETUP-PASSWORD] ‚ùå ‡∏î‡∏∂‡∏á line_user_id ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${sessionError.message}`);
      return res.status(500).json({ message: '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á line_user_id ‡πÑ‡∏î‡πâ' });
    }

    const lineUserId = sessionData?.line_user_id || null;

    // üîç ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• username ‡πÅ‡∏•‡∏∞‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏£‡∏¥‡∏á
    const { data: userData, error: userError } = await supabase
      .from('license_holders')
      .select('username, first_name, last_name')
      .eq('ref_code', ref_code)
      .eq('license_no', license_no)
      .maybeSingle();

    if (userError || !userData) {
      return res.status(404).json({ message: '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ' });
    }

    // ‚úÖ full name ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á‡πÉ‡∏´‡πâ VBA
    const fullName = `${userData.first_name} ${userData.last_name}`;

    // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÅ‡∏ö‡∏ö plain-text ‡πÅ‡∏•‡∏∞‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
    const { error: updateError } = await supabase
      .from('license_holders')
      .update({
        password: password, // ‚ùó ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å plain-text password
        status: 'ACTIVATED'
      })
      .match({ ref_code, license_no });

    if (updateError) {
      console.error(`[SETUP-PASSWORD] ‚ùå ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï password ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: ${updateError.message}`);
      return res.status(500).json({ message: '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏î‡πâ' });
    }

    // üì© ‡∏™‡πà‡∏á LINE ‡πÅ‡∏à‡πâ‡∏á username + password
    const message = [
      `‚úÖ ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö`,
      `License No: ${license_no}`,
      `Ref.Code: ${ref_code}`,
      `Username: ${userData.username}`,
      `Password: ${password}`
    ].join('\n');

    let messageSent = false;
    if (lineUserId) {
      try {
        await client.pushMessage(lineUserId, {
          type: 'text',
          text: message
        });
        console.log(`[SETUP-PASSWORD] ‚úÖ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á LINE: ${lineUserId}`);
        messageSent = true;
      } catch (lineErr) {
        console.warn(`[SETUP-PASSWORD] ‚ö†Ô∏è ‡∏™‡πà‡∏á LINE ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${lineErr.message}`);
      }
    }

    // ‚úÖ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡πÉ‡∏´‡πâ VBA
    return res.status(200).json({
      license_no,
      ref_code,
      fullName,
      message: '‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ô‡∏µ‡πâ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£ Activate License ‡πÇ‡∏î‡∏¢‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏î‡∏π Username ‡πÅ‡∏•‡∏∞ Password ‡πÉ‡∏ô‡πÑ‡∏•‡∏ô‡πå ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì',
      messageSent
    });

  } catch (err) {
    console.error(`[SETUP-PASSWORD] ‚ùå [STATUS 500] ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${err.message}`);
    return res.status(500).json({ message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏', error: err.message });
  }
};

module.exports = { setupPassword };
