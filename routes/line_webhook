// routes/lineWebhook.js
const express = require('express');
const router = express.Router();
const line = require('@line/bot-sdk');

// LINE config
const client = new line.Client({
  channelAccessToken: process.env.LINE_CHANNEL_ACCESS_TOKEN
});

// ‡∏™‡∏∏‡πà‡∏° Ref.Code (4 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏´‡∏ç‡πà+‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç)
function generateRefCode(length = 4) {
  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
  let result = '';
  for (let i = 0; i < length; i++) {
    result += chars.charAt(Math.floor(Math.random() * chars.length));
  }
  return result;
}

// Webhook endpoint
router.post('/webhook', line.middleware({
  channelSecret: process.env.LINE_CHANNEL_SECRET
}), async (req, res) => {
  const events = req.body.events;

  for (const event of events) {
    if (event.type === 'message' && event.message.type === 'text') {
      const userMessage = event.message.text.trim();

      if (userMessage === 'REQ_REFCODE') {
        const lineUserId = event.source.userId;
        const refCode = generateRefCode();

        console.log('üì© LINE USER ID:', lineUserId);
        console.log('üîê REF.CODE:', refCode);

        await client.replyMessage(event.replyToken, {
          type: 'text',
          text: `üîê Ref.Code ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠: ${refCode}`
        });
      }
    }
  }

  return res.status(200).end();
});

module.exports = router;
