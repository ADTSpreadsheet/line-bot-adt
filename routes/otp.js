// routes/otp.js
const express = require('express');
const router = express.Router();

// ‚úÖ Import Controllers
const { requestOtp, checkOtpStatus, resendOtp } = require('../controllers/otpController');
const { confirmOtp, clearOtp } = require('../controllers/confirmOtpController'); // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° clearOtp ‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡∏î‡πâ‡∏ß‡∏¢

// ‚úÖ Import Middleware
const { validateBody, validateQueryParams } = require('../middlewares/validator');

// ==============================================
// üìå OTP ROUTES (prefix: /router)
// ==============================================

/**
 * @route POST /router/request
 * @desc ‡∏Ç‡∏≠ OTP ‡πÉ‡∏´‡∏°‡πà
 */
router.post(
  '/request',
  validateBody(['ref_code']),
  requestOtp
);

/**
 * @route POST /router/verify
 * @desc ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô OTP ‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏£‡∏≠‡∏Å
 */
router.post(
  '/verify',
  validateBody(['ref_code', 'otp']),
  confirmOtp
);

/**
 * @route POST /router/clear-otp
 * @desc ‡∏•‡πâ‡∏≤‡∏á OTP ‡πÅ‡∏•‡∏∞‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï verify_status ‚Üí Active
 */
router.post(
  '/clear-otp',
  validateBody(['ref_code']),
  clearOtp
);

/**
 * @route POST /router/resend
 * @desc ‡∏™‡πà‡∏á OTP ‡∏ã‡πâ‡∏≥‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
 */
router.post(
  '/resend',
  validateBody(['ref_code']),
  resendOtp
);

/**
 * @route GET /router/status?ref_code=XXXX
 * @desc ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ OTP ‡∏ß‡πà‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
 */
router.get(
  '/status',
  validateQueryParams(['ref_code']),
  checkOtpStatus
);

// ==============================================
// ‚úÖ Export Router
// ==============================================
module.exports = router;
